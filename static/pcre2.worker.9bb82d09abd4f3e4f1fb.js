(()=>{"use strict";var e;null==(e=self).performance&&(e.performance={}),null==e.performance.now&&(e.performance.now=()=>Date.now()),importScripts("/static/pcre2lib.js");const r=Module.cwrap("pcre2_compile_16","number",["number","number","number","number","number","number"]),n=Module.cwrap("pcre2_substitute_16","number",["number","number","number","number","number","number","number","number","number","number","number"]),o=Module.cwrap("pcre2_code_free_16","number",["number"]),t=Module.cwrap("pcre2_match_context_create_16","number",["number"]),a=Module.cwrap("pcre2_match_context_free_16","number",["number"]),u=Module.cwrap("pcre2_get_error_message_16","number",["number","number","number"]);let l={};function s(e){try{const{regex:o,testString:s,substString:i,listMode:b}=e.data;let{flags:f}=e.data;b&&(f+="Q");const d=function(e,n){let o=0,t=1536;if(l){if(l.pattern===e&&l.flags===n)return;c()}for(let e=0,r=n.length;e<r;e++)switch(n[e]){case"g":t|=256;break;case"A":o|=2147483648;break;case"E":o|=1;break;case"X":o|=2;break;case"C":o|=2097152;break;case"i":o|=8;break;case"D":o|=16;break;case"s":o|=32;break;case"J":o|=64;break;case"x":o|=128;break;case"N":o|=512;break;case"m":o|=1024;break;case"n":o|=8192;break;case"u":o|=655360;break;case"U":o|=262144;break;case"Y":o|=65536;break;case"Z":o|=4;break;case"Q":t|=131072;break;default:throw new Error(`Unknown option '${n[e]}' supplied.`)}l.pattern=e,l.flags=n,l.optionBits=2097152|o,l.matchBits=t;const a=Module._malloc(8),s=a,i=a+4,b=m(e),f=r(b,-1,o,s,i,0);if(Module._free(b),!f){const e=`${function(e){const r=Module._malloc(512);let n=`Error ${e}`;return u(e,r,256)>0&&(n=Module.UTF16ToString(r)),Module._free(r),n}(Module.getValue(s,"i32"))} - offset: ${Module.getValue(i,"i32")}`;return Module._free(a),c(),e||"Unknown compilation error"}l.regex=f,Module._free(a)}(o,f);if(d)return void self.postMessage({error:d,result:null});const p=performance.now(),M=function(e,r){if(!l.regex)throw new Error("No pattern supplied to matching function!");const o=Module._malloc(4),u=m(e),s=e.length,c=m(r),i=t(0);let b,f;Module.setValue(o,Math.max(65536,2*s+1),"i32");let d=null,p=null;for(let e=4096;;e=0){if(b=e?Module._malloc(2*Module.getValue(o,"i32")):Module._realloc(b,2*Module.getValue(o,"i32")),f=n(l.regex,u,s,0,l.matchBits|e,0,i,c,-1,b,o),f>=0){p=Module.UTF16ToString(b);break}if(e&&-48!==f){d=f||"Unknown engine error";break}if(!e)break}return a(i),Module._free(b),Module._free(c),Module._free(u),{error:d,result:p}}(s,i);M.time=performance.now()-p,self.postMessage(M)}catch(e){console.error("An unhandled error was thrown, please report this",e),self.postMessage({error:e.message||"Unknown error occurred"})}}function c(){l.regex&&o(l.regex),l={}}function m(e){const r=2*e.length+2,n=Module._malloc(r);return Module.stringToUTF16(e,n,r),n}Module.onRuntimeInitialized=function(){self.onmessage=s,self.postMessage("onload")}})();