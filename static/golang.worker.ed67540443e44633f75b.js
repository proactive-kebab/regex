(()=>{"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function e(e,n){return function(t){if(Array.isArray(t))return t}(e)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,l=[],i=!0,s=!1;try{for(n=n.call(t);!(i=(r=n.next()).done)&&(l.push(r.value),!e||l.length!==e);i=!0);}catch(t){s=!0,o=t}finally{try{i||null==n.return||n.return()}finally{if(s)throw o}}return l}}(e,n)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}const n=t=>{const n={};for(let o=0;o<t.length;o++){const l=t[o];for(let t=0;t<l.length;t++){const o=l[t],i=e(r(o),2),s=i[0],a=i[1];if(!(s<0))if(s===a)n[s]=[...n[s]||[],o];else for(let t=s;t<a;t++)n[t]=[...n[t]||[],o]}}return n},r=t=>[Math.min(t.start,t.end),Math.max(t.start,t.end)];var o;function l(t){const e=performance.now(),{regex:r,flags:o,testString:l}=t.data,s=o.replace("g","");let a=r;s.length>0&&(a=`(?${s})${r}`);const u=function(t,e,r){const o=e.includes("g"),l=[];if(i.pattern!==t||i.flags!==e||!i.regexPointer){i.regexPointer&&Module._free(i.regexPointer);const n=2*(2*t.length+1),r=Module._malloc(n);Module.stringToUTF8(t,r,n),i.pattern=t,i.flags=e,i.regexPointer=Module.RE2_CreateRegex(r)}if(i.subject!==r||!i.testStringPointer){i.testStringPointer&&Module._free(i.testStringPointer);const t=2*(2*r.length+1),e=Module._malloc(t);Module.stringToUTF8(r,e,t),i.subject=r,i.testStringPointer=e,i.subjectLength=function(t,e){let n=0;for(let r=t,o=t+e;r<o&&0!==Module.HEAP8[r];r++)n++;return n}(e,t)}let s=0,a=0,u=0,c=0;for(;a<=i.subjectLength;){const t=Module.RE2_Match(i.regexPointer,i.testStringPointer,a,u,c,i.subjectLength),e=t.size();if(0===e)break;const n=[];let f=0;for(let o=0;o<e;){const e=t.get(o++),l=t.get(o++),i=t.get(o++),g=t.get(o++);0===f&&(a=l+(e===l?1:0),u=l,c=g),n.push({isParticipating:!0,groupNum:f++,start:i,end:g,content:r.substring(i,g),match:s})}if(l.push(n),s++,!o)break}return{matchResult:l,matchMap:n(l)}}(a,o,l);u.time=performance.now()-e,self.postMessage(u)}null==(o=self).performance&&(o.performance={}),null==o.performance.now&&(o.performance.now=()=>Date.now()),importScripts("/static/golang.js"),Module.onRuntimeInitialized=()=>{self.onmessage=l,self.postMessage("onload")};const i={pattern:null,flags:null,regexPointer:null,subject:null,testStringPointer:null,subjectLength:0}})();